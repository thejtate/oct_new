<?php
/**
 * @file oct custom module
 *
 * @author Sergey Grigorenko <svipsa@gmail.com>
 */

define('OCT_CUSTOM_CONTACT_US_NID', 10);

module_load_include("inc", "oct_custom", "includes/oct_custom.block");
module_load_include("inc", "oct_custom", "includes/oct_custom.social_menu.maps");


/**
 * Implements hook_wysiwyg_editor_settings_alter().
 */
function oct_custom_wysiwyg_editor_settings_alter(&$settings, $context) {
  if ($context['profile']->editor == "ckeditor") {
    $settings['enterMode'] = 2; //<br />
    $settings['shiftEnterMode'] = 1; //<p>
  }
}


/**
 * Implements hook_theme().
 */
function oct_custom_theme() {
  return array(
    'oct_custom_right_block' => array(
      'variables' => array('link' => NULL, 'class' => NULL, 'content' => NULL),
      'template' => 'templates/blocks/oct-custom-right-block'
    ),
    'oct_custom_ftb_item' => array(
      'variables' => array(
        'title' => NULL,
        'description' => NULL,
        'cost' => NULL,
        'cost_description' => NULL,
        'key' => NULL
      ),
      'template' => 'templates/ftb/oct-custom-ftb-item'
    ),
    'oct_custom_ftb_spons' => array(
      'variables' => array(
        'title' => NULL,
        'price' => NULL,
        'items' => NULL,
        'key' => NULL
      ),
      'template' => 'templates/ftb/oct-custom-ftb-spons'
    ),
    'oct_custom_ftb_form' => array(
      'render element' => 'form',
      'template' => 'templates/ftb/oct-custom-ftb-form'
    ),
    'oct_custom_social_block' => array(
      'variables' => array(
        'items' => NULL,
      ),
      'template' => 'templates/blocks/oct-custom-social-block'
    ),
    'oct_custom__social_menu' => array(
      'template' => 'templates/blocks/oct-custom--social-menu',
      'arguments' => array('data' => NULL),
    ),
  );
}


/**
 * Implements hook_preprocess_node().
 */
function oct_custom_preprocess_node(&$vars) {
  switch ($vars['type']) {
    case "fairy_tale_ball_form":
      module_load_include("inc", "oct_custom", "includes/oct_custom.ftb");
      _oct_custom_fairy_tale_ball_form_preprocess($vars);
      break;
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function oct_custom_preprocess_oct_custom__social_menu(&$variables) {
  $items = array();

  foreach ($variables['data'] as $key => $data) {
    $url = variable_get($key, "");
    $title = (isset($data['title'])) ? $data['title'] : "";
    if (!empty($url)) {
      $items[] = array(
        'data' => l($title, $url, array('attributes' => array('target' => 'blank'))),
        'class' => array($data['class'])
      );
    }
  }
  if ($items) {
    $variables['social_menu'] = theme('item_list', array('items' => $items), NULL, 'ul');
  }
}

/**
 * Implements hook_preprocess_views_data_export_xls_body().
 */
function oct_custom_preprocess_views_data_export_xls_body(&$vars) {

  $view = isset($vars['view']) ? $vars['view'] : '';
  $view_name = isset($view->name) ? $view->name : '';
  $view_current_display = isset($view->current_display) ? $view->current_display : '';

  switch ($view_name) {
    case 'camps_and_classes_orders':
      if (($view_current_display == 'views_data_export_1') ||
        ($view_current_display == 'views_data_export_2')) {

        foreach ($vars['themed_rows'] as $number => &$row) {
          //Rename $row['data'] element
          if (isset($row['data'])) {
            $row_keys = array_keys($row);
            $row_values = array_values($row);
            $data_key = array_search('data', $row_keys);

            if (!empty($row_keys) && !empty($row_values) && !empty($data_key)) {
              $row_keys[$data_key] = 'data_custom';
              $combined = array_combine($row_keys, $row_values);

              if (!empty($combined)) {
                $row = $combined;
              }
            }
          }
        }
      }
      break;
    case 'production_orders':
      if ($view_current_display == 'views_data_export_1') {
        $rows = !empty($vars['themed_rows']) ? $vars['themed_rows'] : array();
        $rows = oct_custom_change_views_line_id($rows);

        if ($rows) {
          $vars['themed_rows'] = $rows;
        }
      }
      break;
  }
}

/**
 * Implements hook_preprocess_views_aggregator_results_table().
 */
function oct_custom_preprocess_views_aggregator_results_table(&$vars) {
  $view = isset($vars['view']) ? $vars['view'] : '';
  $view_name = isset($view->name) ? $view->name : '';
  $view_current_display = isset($view->current_display) ? $view->current_display : '';

  switch ($view_name) {
    case 'production_orders':
      if ($view_current_display == 'page') {
        $rows = !empty($vars['rows']) ? $vars['rows'] : array();
        $rows = oct_custom_change_views_line_id($rows);

        if ($rows) {
          $vars['rows'] = $rows;
        }
      }
      break;
  }
}

/**
 * Common line id for order with multiple products.
 *
 * @param $rows
 */
function oct_custom_change_views_line_id($rows) {
  if (empty($rows)) {
    return;
  }

  $remote_ids = array();
  $counter = 1;

  foreach ($rows as $key => &$row) {
    if (!empty($row['counter']) && !empty($row['remote_id'])) {
      if (in_array($row['remote_id'], $remote_ids)) {
        $row['counter'] = '';
      }
      else {
        $remote_ids[] = $row['remote_id'];
        $row['counter'] = $counter++;
      }
    }
  }
  return $rows;
}